% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ELEFAN_GA.R
\name{ELEFAN_GA}
\alias{ELEFAN_GA}
\title{ELEFAN_GA}
\usage{
ELEFAN_GA(lfq, seasonalised = FALSE, min = NULL, max = NULL,
  popSize = 100, maxiter = 100, run = 20, parallel = FALSE,
  pmutation = 0.3, pcrossover = 0.8, elitism = 10, MA = 5,
  addl.sqrt = FALSE, flagging.out = TRUE, plot = FALSE, ...)
}
\arguments{
\item{lfq}{a list consisting of following parameters:
\itemize{
  \item \strong{midLengths} midpoints of the length classes,
  \item \strong{dates} dates of sampling times (class Date),
  \item \strong{catch} matrix with catches/counts per length class (row) and sampling date (column);
}}

\item{seasonalised}{logical. Default:FALSE}

\item{min}{a vector of length equal to the decision variables
providing the minimum of the search space in case of real-valued
or permutation encoded optimizations.}

\item{max}{a vector of length equal to the decision variables
providing the maximum of the search space in case of real-valued
or permutation encoded optimizations.}

\item{popSize}{the population size.}

\item{maxiter}{the maximum number of iterations to run before the
GA search is halted. default:100}

\item{run}{the number of consecutive generations without any improvement
in the best fitness value before the GA is stopped. Default:20}

\item{parallel}{a logical argument specifying if parallel computing
should be used (TRUE) or not (FALSE, default) for evaluating the
fitness function. See \code{\link[GA]{ga}} for details. Default:FALSE, but
setting to TRUE may substantially improve required calculation time. Use of
this functionality requires the following packages: parallel, doParallel.}

\item{pmutation}{the probability of mutation in a parent chromosome.
Usually mutation occurs with a small probability, and by default is set to 0.1.}

\item{pcrossover}{the probability of crossover between pairs of chromosomes.
Typically this is a large value and by default is set to 0.8.}

\item{elitism}{the number of best fitness individuals to survive at each generation.
By default the top 5\% individuals will survive at each iteration.}

\item{MA}{number indicating over how many length classes the moving average
should be performed (default: 5)}

\item{addl.sqrt}{additional squareroot transformation of positive values
according to Brey et al. (1988) (default: FALSE).}

\item{flagging.out}{logical; should positive peaks be flagged out? Original setting of
ELEFAN in TRUE. Default:TRUE}

\item{plot}{logical. Plot restructured counts with fitted lines using
\code{\link{plot.lfq}} and \code{\link{calcLt}}}

\item{...}{additional parameters to pass to \code{\link[GA]{ga}}}
}
\value{
lfq with restructured counts, fitted parameters, and fitness score
}
\description{
Electronic LEngth Frequency ANalysis with genetic algorithm
used for estimating growth parameters.
}
\examples{
\dontrun{

# load data and view catch length frequencies
data(synLFQ4)
plot(synLFQ4, Fname="catch")

# Genetic algorithm
res <- ELEFAN_GA(
  synLFQ4,
  seasonalised = TRUE,
  min = c(70, 0.25, 0, 0, 0),
  max = c(90, 0.7, 1, 1, 1),
  parallel = TRUE,
  popSize = 40,
  maxiter = 50,
  run = 20,
  MA = 11, addl.sqrt = FALSE,
  flagging.out = FALSE,
  plot = TRUE,
  seed = 1111
)
res$par
res$ASP
res$fitnessValue

# compare fitness score (ESP) to
# that calculated with "true" growth parameter values
plot(res)
calcLt(res, par=list(Linf=80, K=0.5, t_anchor=0.25, C=0.75, ts=0),
       draw = TRUE, col=1, flagging.out = FALSE)$ESP
calcLt(res, par=res$par, draw = TRUE, col=2, flagging.out = FALSE)$ESP
legend("top", legend=c("orig.", "GA"), lty=2, col=1:2, ncol=2)

}

}

